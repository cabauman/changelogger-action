    // const pr = github.context.payload.pull_request!
    // const { data: prCommits } = await github.getOctokit('').rest.pulls.listCommits({
    //   owner: pr.base.repo.owner.login,
    //   repo: pr.base.repo.name,
    //   pull_number: pr.number,
    // })
    // const commitSha = prCommits[0].sha
    // const eventName = github.context.eventName // pull_request
    // const githubRefName = process.env.GITHUB_REF_NAME

    const versionLink = this.markdown.link('version', 'url')
    let result = this.markdown.heading(versionLink, 2)



DELETING PRERELEASE TAGS

x=$(git tag -l | grep -Po "^${version}-\w+\.\d+$")

- name: Delete prerelease tags
  if: ${{ github.event.inputs.prerelease == '' }}
  run: |
    version=${{ steps.get-latest-tag.outputs.version-tag }}
    tag=$(git describe --tags --abbrev=0 $version^)
    i=1
    regex_base="^v[0-9]+\.[0-9]+\.[0-9]+-"
    regex1="$regex_base[[:alnum:]]+\.[0-9]+$"
    regex2="$regex_base[0-9]+$"
    while [[ $tag =~ $regex1 || $tag =~ $regex2 ]]; do
      git push --delete origin $tag
      tag=$(git describe --tags --abbrev=0 $tag^)
    done